type ProductModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  categories: AWSJSON
  price: Float
  imageUrl: String
  description: String
  onlinestoremodelID: ID @index(name: "byOnlineStoreModel")
}

type PhysicalStoreModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  phoneNumber: AWSPhone
  address: String
  operationHours: AWSJSON
  categories: AWSJSON
  qrCode: String
  storeownermodelID: ID @index(name: "byStoreOwnerModel")
}

type OnlineStoreModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  phoneNumber: AWSPhone
  address: String
  operationHours: AWSJSON
  categories: AWSJSON
  ProductModels: [ProductModel] @hasMany(indexName: "byOnlineStoreModel", fields: ["id"])
  storeownermodelID: ID @index(name: "byStoreOwnerModel")
}

type StoreOwnerModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  OnlineStoreModel: [OnlineStoreModel] @hasMany(indexName: "byStoreOwnerModel", fields: ["id"])
  PhysicalStoreModel: [PhysicalStoreModel] @hasMany(indexName: "byStoreOwnerModel", fields: ["id"])
  usermodelID: ID @index(name: "byUserModel")
}

type ShoppingBagModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  productsAndQuantity: AWSJSON
  usermodelID: ID @index(name: "byUserModel")
}

type UserModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: String!
  name: String!
  imageUrl: String
  creditCards: AWSJSON
  bankAccount: String
  ShoppingBagModels: [ShoppingBagModel] @hasMany(indexName: "byUserModel", fields: ["id"])
  StoreOwnerModel: [StoreOwnerModel] @hasMany(indexName: "byUserModel", fields: ["id"])
  cashBackMoney: Float
}
 